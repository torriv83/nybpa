#file: noinspection YAMLSchemaValidation
name: Deploy Laravel Application

on:
  push:
    branches: [ devtest ]

jobs:
  ci:
    name: ⚡ Rask Deploy CI
    container:
      image: torriv/ci-laravel:php8.4-node22-v2
    env:
      RUNNER_TOOL_CACHE: /toolcache
    outputs:
      composer-hit: ${{ steps.cache-composer.outputs.cache-hit }}
      npm-hit: ${{ steps.cache-npm.outputs.cache-hit }}
      bootstrap-hit: ${{ steps.cache-bootstrap.outputs.cache-hit }}
      public-hit: ${{ steps.cache-public-build.outputs.cache-hit }}
      phpunit-hit: ${{ steps.cache-phpunit.outputs.cache-hit }}
    steps:
      #----------------------------------------
      # CHECKOUT + CACHE
      #----------------------------------------
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 🔄 Cache Composer dependencies
        id: cache-composer
        uses: actions/cache@v3
        with:
          path: vendor
          key: composer-${{ hashFiles('composer.lock') }}
          restore-keys: composer-

      - name: 🔄 Cache NPM dependencies
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: node_modules
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: 🔄 Cache Laravel bootstrap/cache
        id: cache-bootstrap
        uses: actions/cache@v3
        with:
          path: bootstrap/cache
          key: bootstrap-${{ hashFiles('bootstrap/cache/*.php') }}
          restore-keys: bootstrap-

      - name: 🔄 Cache public build assets
        id: cache-public-build
        uses: actions/cache@v3
        with:
          path: public/build
          key: public-build-${{ hashFiles('resources/**/*') }}
          restore-keys: public-build-

      - name: 🔄 Cache PHPUnit result cache
        id: cache-phpunit
        uses: actions/cache@v3
        with:
          path: tests/.phpunit.result.cache
          key: phpunit-${{ hashFiles('phpunit.xml') }}
          restore-keys: phpunit-

      #----------------------------------------
      # INSTALLASJON + BUILD
      #----------------------------------------
      - name: 📁 Install Composer
        run: composer install --no-interaction --optimize-autoloader

      - name: 📁 Install NPM + Build assets
        run: |
          npm ci
          npm run build

      #----------------------------------------
      # OPTIMALISERING
      #----------------------------------------
      - name: ⚖️ Laravel optimize + Filament optimize
        run: |
          php artisan optimize
          php artisan filament:optimize

      #----------------------------------------
      # KODEKVALITET
      #----------------------------------------
      - name: 🌟 Pint (kodeformat)
        run: ./vendor/bin/pint --test

      - name: 🔍 Larastan (PHPStan)
        run: ./vendor/bin/phpstan analyse --memory-limit -1

      #----------------------------------------
      # TESTING
      #----------------------------------------
      - name: 🔐 Inject APP_KEY
        run: echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env.testing

      - name: 🧪 Run Laravel Tests
        run: |
          php artisan config:clear
          php artisan test --parallel

      #----------------------------------------
      # DISCORD NOTIFIKASJONER
      #----------------------------------------
      - name: 📢 Notify failure
        if: failure()
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{"content":"❌ CI feilet for *nybpa*. Sjekk loggene!"}' \
               $DISCORD_WEBHOOK
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

      - name: 📢 Notify success
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{"content":"✅ CI-kjøring for *nybpa* fullført!"}' \
               $DISCORD_WEBHOOK
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

  save-cache:
    name: 📂 Save Cache
    needs: ci
    if: always()
    container:
      image: torriv/ci-laravel:php8.4-node22-v2
    steps:
      #----------------------------------------
      # SAVE CACHES (ETTER CI KJØRING)
      #----------------------------------------
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 📂 Save Composer dependencies
        if: needs.ci.outputs.composer-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: vendor
          key: composer-${{ hashFiles('composer.lock') }}

      - name: 📂 Save NPM dependencies
        if: needs.ci.outputs.npm-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: node_modules
          key: npm-${{ hashFiles('package-lock.json') }}

      - name: 📂 Save Laravel bootstrap/cache
        if: needs.ci.outputs.bootstrap-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: bootstrap/cache
          key: bootstrap-${{ hashFiles('bootstrap/cache/*.php') }}

      - name: 📂 Save public build assets
        if: needs.ci.outputs.public-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: public/build
          key: public-build-${{ hashFiles('resources/**/*') }}

      - name: 📂 Save PHPUnit result cache
        if: needs.ci.outputs.phpunit-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: tests/.phpunit.result.cache
          key: phpunit-${{ hashFiles('phpunit.xml') }}
