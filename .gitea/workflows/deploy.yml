#file: noinspection YAMLSchemaValidation
name: Deploy Laravel Application

on:
  push:
    branches: [ devtest ]

jobs:
  ci:
    container:
      image: torriv/ci-laravel:php8.4-node22-v2
    env:
      RUNNER_TOOL_CACHE: /toolcache

    steps:
      - uses: actions/checkout@v3

      - name: Cache Composer dependencies
        id: cache-composer
        uses: actions/cache@v3
        with:
          path: vendor
          key: composer-${{ hashFiles('composer.lock') }}
          restore-keys: |
            composer-

      - name: Cache NPM dependencies
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: node_modules
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-

      - name: Cache Laravel bootstrap/cache
        id: cache-bootstrap
        uses: actions/cache@v3
        with:
          path: bootstrap/cache
          key: bootstrap-${{ hashFiles('bootstrap/cache/*.php') }}
          restore-keys: |
            bootstrap-

      - name: Save Laravel bootstrap/cache
        if: steps.cache-bootstrap.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: bootstrap/cache
          key: bootstrap-${{ hashFiles('bootstrap/cache/*.php') }}

      - name: Cache public build assets
        id: cache-public-build
        uses: actions/cache@v3
        with:
          path: public/build
          key: public-build-${{ hashFiles('resources/**/*') }}
          restore-keys: |
            public-build-

      - name: Save public build assets
        if: steps.cache-public-build.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: public/build
          key: public-build-${{ hashFiles('resources/**/*') }}

      - name: Cache PHPUnit result cache
        id: cache-phpunit
        uses: actions/cache@v3
        with:
          path: tests/.phpunit.result.cache
          key: phpunit-${{ hashFiles('phpunit.xml') }}
          restore-keys: |
            phpunit-

      - name: Save PHPUnit result cache
        if: steps.cache-phpunit.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: tests/.phpunit.result.cache
          key: phpunit-${{ hashFiles('phpunit.xml') }}

      - name: Install Composer dependencies
        continue-on-error: true
        run: composer install --no-interaction --optimize-autoloader

      - name: Install NPM dependencies and build assets
        run: |
          npm ci
          npm run build

      - name: Cache Laravel config, routes, views, filament
        run: |
          php artisan optimize
          php artisan filament:optimize

      - name: Run Pint (Laravel code style)
        run: ./vendor/bin/pint --test

      - name: Run Larastan (PHPStan)
        run: ./vendor/bin/phpstan analyse

      - name: Inject APP_KEY into .env.testing
        run: |
          echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env.testing

      - name: Run tests
        run: |
          php artisan config:clear
          php artisan test --parallel

      - name: Notify Discord ‚Äì success
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{"content":"‚úÖ CI-kj√∏ring for *nybpa* fullf√∏rt!"}' \
               $DISCORD_WEBHOOK
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

      - name: Notify Discord ‚Äì failure
        if: failure()
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{"content":"‚ùå CI feilet for *nybpa*. Sjekk loggene!"}' \
               $DISCORD_WEBHOOK
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

      - name: Save Composer dependencies
        if: steps.cache-composer.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: vendor
          key: composer-${{ hashFiles('composer.lock') }}

      - name: Save NPM dependencies
        if: steps.cache-npm.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: node_modules
          key: npm-${{ hashFiles('package-lock.json') }}

      - name: Lag tag og push commit + tag til origin
        if: success()
        env:
          GITEA_TOKEN: ${{ secrets.GITEA_TOKEN }}
        run: |
          git config user.name "CI Bot"
          git config user.email "ci@torriv.local"

          VERSION=$(date +'%Y.%m.%d')-build.$(git rev-list --count HEAD)
          TAG="v$VERSION"

          echo "üè∑ Lager lokal tag: $TAG"
          git tag "$TAG"

          echo "‚òÅÔ∏è Pusher tag og eventuelle commits"
          git push origin HEAD
          git push origin "$TAG"
